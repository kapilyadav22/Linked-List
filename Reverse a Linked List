// recursive approach
//TC = O(N)
//SC = O(1)

class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        if(head==nullptr) return nullptr;
        if(head->next ==nullptr) return head;
        ListNode* curr=head;
        ListNode* temp=reverseList(head->next);
        curr->next->next=curr;
        curr->next=nullptr;
        return temp;
    }

};


//iterative approach
class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        ListNode* prev=NULL;
        ListNode* current = head;
        ListNode* Temp= NULL;
      
      while(current!=NULL)
      {
         Temp= current->next;
         current->next= prev;
          prev= current;
        current=Temp;
      }
      return prev;
    }
};

//TC = O(N)
//SC = O(1)
